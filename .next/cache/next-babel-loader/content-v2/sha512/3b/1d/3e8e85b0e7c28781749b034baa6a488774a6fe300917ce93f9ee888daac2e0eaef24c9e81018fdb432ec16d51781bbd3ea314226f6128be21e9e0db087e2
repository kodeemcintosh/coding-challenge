{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kodeemcintosh/Repos/coding-challenge/pages/index.tsx\";\n// import fetch from 'isomorphic-unfetch';\nimport { Header } from '@components/header';\nimport { Footer } from '@components/footer';\nimport { TicketItem } from '@components/ticket-item';\nexport async function getStaticProps() {\n  const data = await fetch('http://0.0.0.0:3000/api/reports', {\n    method: 'GET'\n  });\n  const {\n    reports\n  } = await data.json();\n  return {\n    props: {\n      reports\n    }\n  };\n}\n\nconst IndexPage = ({\n  reports\n}) => {\n  const handleUpdateTicket = async (id, state) => {\n    const response = await fetch('http://0.0.0.0:3000/api/reports/' + id, {\n      method: 'PUT',\n      // headers: {\n      //   \"Access-Control-Allow-Origin\": \"*\",\n      //   \"Content-Type\": \"text/plain\"\n      // },\n      body: JSON.stringify({\n        payload: {\n          ticketState: state\n        }\n      })\n    });\n    response;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid mx-20\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-sm hover:shadow-lg duration-500 px-2 sm:px-6 md:px-2 py-4 my-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols\",\n          children: reports === null || reports === void 0 ? void 0 : reports.map(({\n            id,\n            type,\n            status,\n            message\n          }) => {\n            return /*#__PURE__*/_jsxDEV(TicketItem, {\n              id: id,\n              type: type,\n              status: status,\n              message: message,\n              resolve: () => handleUpdateTicket(id, 'RESOLVED'),\n              block: () => handleUpdateTicket(id, 'BLOCKED')\n            }, `ticket-${id})`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/Users/kodeemcintosh/Repos/coding-challenge/pages/index.tsx"],"names":["Header","Footer","TicketItem","getStaticProps","data","fetch","method","reports","json","props","IndexPage","handleUpdateTicket","id","state","response","body","JSON","stringify","payload","ticketState","map","type","status","message"],"mappings":";;;AAEA;AACA,SAASA,MAAT,QAAuB,oBAAvB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AAEA,OAAO,eAAeC,cAAf,GAAiC;AACtC,QAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAoC;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAApC,CAAxB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAc,MAAMH,IAAI,CAACI,IAAL,EAA1B;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLF,MAAAA;AADK;AADF,GAAP;AAKD;;AAMD,MAAMG,SAA6B,GAAG,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAiB;AACrD,QAAMI,kBAAkB,GAAG,OAAOC,EAAP,EAAmBC,KAAnB,KAAqC;AAC9D,UAAMC,QAAQ,GAAG,MAAMT,KAAK,CAAC,qCAAqCO,EAAtC,EAA0C;AACpEN,MAAAA,MAAM,EAAE,KAD4D;AAEpE;AACA;AACA;AACA;AACAS,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,OAAO,EAAE;AACPC,UAAAA,WAAW,EAAEN;AADN;AADU,OAAf;AAN8D,KAA1C,CAA5B;AAYAC,IAAAA,QAAQ;AACT,GAdD;;AAeA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,2FAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,oBACGP,OADH,aACGA,OADH,uBACGA,OAAO,CAAEa,GAAT,CAAa,CAAC;AAAER,YAAAA,EAAF;AAAMS,YAAAA,IAAN;AAAYC,YAAAA,MAAZ;AAAoBC,YAAAA;AAApB,WAAD,KAAwC;AACpD,gCACE,QAAC,UAAD;AAEE,cAAA,EAAE,EAAEX,EAFN;AAGE,cAAA,IAAI,EAAES,IAHR;AAIE,cAAA,MAAM,EAAEC,MAJV;AAKE,cAAA,OAAO,EAAEC,OALX;AAME,cAAA,OAAO,EAAE,MAAMZ,kBAAkB,CAACC,EAAD,EAAK,UAAL,CANnC;AAOE,cAAA,KAAK,EAAE,MAAMD,kBAAkB,CAACC,EAAD,EAAK,SAAL;AAPjC,eACQ,UAASA,EAAG,GADpB;AAAA;AAAA;AAAA;AAAA,oBADF;AAWD,WAZA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAqBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA,kBADF;AAyBD,CAzCD;;AA2CA,eAAeF,SAAf","sourcesContent":["\nimport { FC } from 'react';\n// import fetch from 'isomorphic-unfetch';\nimport { Header } from '@components/header';\nimport { Footer } from '@components/footer';\nimport { TicketItem } from '@components/ticket-item';\n\nexport async function getStaticProps () {\n  const data = await fetch('http://0.0.0.0:3000/api/reports', { method: 'GET'});\n  const { reports } = await data.json();\n\n  return {\n    props: {\n      reports\n    }\n  }\n}\n\ninterface IndexPageProps {\n  reports: any;\n}\n\nconst IndexPage: FC<IndexPageProps> = ({ reports }) => {\n  const handleUpdateTicket = async (id: string, state: string) => {\n    const response = await fetch('http://0.0.0.0:3000/api/reports/' + id, {\n      method: 'PUT',\n      // headers: {\n      //   \"Access-Control-Allow-Origin\": \"*\",\n      //   \"Content-Type\": \"text/plain\"\n      // },\n      body: JSON.stringify({\n        payload: {\n          ticketState: state\n        }\n      })\n    });\n    response;\n  }\n  return (\n    <>\n      <Header />\n      <div className=\"grid mx-20\">\n        <div className=\"bg-white rounded-lg shadow-sm hover:shadow-lg duration-500 px-2 sm:px-6 md:px-2 py-4 my-6\">\n          <div className=\"grid grid-cols\">\n            {reports?.map(({ id, type, status, message }: any) => {\n              return(\n                <TicketItem\n                  key={`ticket-${id})`}\n                  id={id}\n                  type={type}\n                  status={status}\n                  message={message}\n                  resolve={() => handleUpdateTicket(id, 'RESOLVED')}\n                  block={() => handleUpdateTicket(id, 'BLOCKED')}\n                />\n              )\n            })}\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}