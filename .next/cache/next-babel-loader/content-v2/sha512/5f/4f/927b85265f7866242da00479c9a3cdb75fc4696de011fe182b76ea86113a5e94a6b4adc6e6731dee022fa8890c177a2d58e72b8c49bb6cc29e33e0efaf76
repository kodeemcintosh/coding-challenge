{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kodeemcintosh/Repos/coding-challenge/pages/index.tsx\";\nimport { useState } from 'react'; // import fetch from 'isomorphic-unfetch';\n\nimport { Header } from '@components/header';\nimport { Footer } from '@components/footer';\nimport { TicketItem } from '@components/ticket-item';\n\nconst IndexPage = ({\n  reports\n}) => {\n  var _tickets$active;\n\n  const {\n    0: tickets,\n    1: setTickets\n  } = useState(reports);\n\n  const handleUpdateTicket = async (id, state) => {\n    const response = await fetch('http://0.0.0.0:3000/api/reports/' + id, {\n      method: 'PUT',\n      body: JSON.stringify({\n        payload: {\n          ticketState: state\n        }\n      }),\n      mode: 'no-cors'\n    });\n    setTickets(response);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid mx-20\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-sm hover:shadow-lg duration-500 px-2 sm:px-6 md:px-2 py-4 my-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols\",\n          children: tickets === null || tickets === void 0 ? void 0 : (_tickets$active = tickets.active) === null || _tickets$active === void 0 ? void 0 : _tickets$active.map(({\n            id,\n            type,\n            status,\n            message\n          }) => {\n            return /*#__PURE__*/_jsxDEV(TicketItem, {\n              id: id,\n              type: type,\n              status: status,\n              message: message,\n              resolve: () => handleUpdateTicket(id, 'RESOLVED'),\n              block: () => handleUpdateTicket(id, 'BLOCKED')\n            }, `ticket-${id})`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport async function getServerSideProps() {\n  const data = await fetch('http://0.0.0.0:3000/api/reports', {\n    method: 'GET'\n  });\n  const {\n    reports\n  } = await data.json();\n  return {\n    props: {\n      reports\n    }\n  };\n}\nexport default IndexPage;","map":{"version":3,"sources":["/Users/kodeemcintosh/Repos/coding-challenge/pages/index.tsx"],"names":["useState","Header","Footer","TicketItem","IndexPage","reports","tickets","setTickets","handleUpdateTicket","id","state","response","fetch","method","body","JSON","stringify","payload","ticketState","mode","active","map","type","status","message","getServerSideProps","data","json","props"],"mappings":";;;AACA,SAAaA,QAAb,QAA6B,OAA7B,C,CACA;;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,UAAT,QAA2B,yBAA3B;;AAMA,MAAMC,SAA6B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACrD,QAAM;AAAA,OAAEC,OAAF;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAACK,OAAD,CAAxC;;AACA,QAAMG,kBAAkB,GAAG,OAAOC,EAAP,EAAmBC,KAAnB,KAAqC;AAC9D,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqCH,EAAtC,EAA0C;AACpEI,MAAAA,MAAM,EAAE,KAD4D;AAEpEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,OAAO,EAAE;AACPC,UAAAA,WAAW,EAAER;AADN;AADU,OAAf,CAF8D;AAOpES,MAAAA,IAAI,EAAE;AAP8D,KAA1C,CAA5B;AAUAZ,IAAAA,UAAU,CAACI,QAAD,CAAV;AACD,GAZD;;AAaA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,2FAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,oBACGL,OADH,aACGA,OADH,0CACGA,OAAO,CAAEc,MADZ,oDACG,gBAAiBC,GAAjB,CAAqB,CAAC;AAAEZ,YAAAA,EAAF;AAAMa,YAAAA,IAAN;AAAYC,YAAAA,MAAZ;AAAoBC,YAAAA;AAApB,WAAD,KAAwC;AAC5D,gCACE,QAAC,UAAD;AAEE,cAAA,EAAE,EAAEf,EAFN;AAGE,cAAA,IAAI,EAAEa,IAHR;AAIE,cAAA,MAAM,EAAEC,MAJV;AAKE,cAAA,OAAO,EAAEC,OALX;AAME,cAAA,OAAO,EAAE,MAAMhB,kBAAkB,CAACC,EAAD,EAAK,UAAL,CANnC;AAOE,cAAA,KAAK,EAAE,MAAMD,kBAAkB,CAACC,EAAD,EAAK,SAAL;AAPjC,eACQ,UAASA,EAAG,GADpB;AAAA;AAAA;AAAA;AAAA,oBADF;AAWD,WAZA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAqBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA,kBADF;AAyBD,CAxCD;;AA0CA,OAAO,eAAegB,kBAAf,GAAqC;AAC1C,QAAMC,IAAI,GAAG,MAAMd,KAAK,CAAC,iCAAD,EAAoC;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAApC,CAAxB;AACA,QAAM;AAAER,IAAAA;AAAF,MAAc,MAAMqB,IAAI,CAACC,IAAL,EAA1B;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLvB,MAAAA;AADK;AADF,GAAP;AAKD;AAED,eAAeD,SAAf","sourcesContent":["\nimport { FC, useState } from 'react';\n// import fetch from 'isomorphic-unfetch';\nimport { Header } from '@components/header';\nimport { Footer } from '@components/footer';\nimport { TicketItem } from '@components/ticket-item';\n\ninterface IndexPageProps {\n  reports: any;\n}\n\nconst IndexPage: FC<IndexPageProps> = ({ reports }) => {\n  const [ tickets, setTickets ] = useState(reports);\n  const handleUpdateTicket = async (id: string, state: string) => {\n    const response = await fetch('http://0.0.0.0:3000/api/reports/' + id, {\n      method: 'PUT',\n      body: JSON.stringify({\n        payload: {\n          ticketState: state\n        }\n      }),\n      mode: 'no-cors'\n    });\n\n    setTickets(response);\n  }\n  return (\n    <>\n      <Header />\n      <div className=\"grid mx-20\">\n        <div className=\"bg-white rounded-lg shadow-sm hover:shadow-lg duration-500 px-2 sm:px-6 md:px-2 py-4 my-6\">\n          <div className=\"grid grid-cols\">\n            {tickets?.active?.map(({ id, type, status, message }: any) => {\n              return(\n                <TicketItem\n                  key={`ticket-${id})`}\n                  id={id}\n                  type={type}\n                  status={status}\n                  message={message}\n                  resolve={() => handleUpdateTicket(id, 'RESOLVED')}\n                  block={() => handleUpdateTicket(id, 'BLOCKED')}\n                />\n              )\n            })}\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport async function getServerSideProps () {\n  const data = await fetch('http://0.0.0.0:3000/api/reports', { method: 'GET'});\n  const { reports } = await data.json();\n\n  return {\n    props: {\n      reports\n    }\n  }\n}\n\nexport default IndexPage;"]},"metadata":{},"sourceType":"module"}