{"ast":null,"code":"import { PrismaClient } from '@prisma/client';\nconst prisma = new PrismaClient();\n\nconst handler = async (req, res) => {\n  try {\n    if (!req.body) {\n      return res.status(304).json({\n        error: 'Empty reportId param'\n      });\n    }\n\n    if (!req.query.reportId) {\n      return res.status(304).json({\n        error: 'Empty reportId param'\n      });\n    }\n\n    const reportId = req.query.reportId.toString();\n    console.log('req.body: ', JSON.parse(req.body));\n    const data = JSON.parse(req.body);\n    const {\n      payload\n    } = data;\n\n    if (payload.ticketState !== 'RESOLVED' || payload.ticketState !== 'BLOCKED') {\n      res.end();\n      return;\n    }\n\n    const count = await prisma.report.count({\n      where: {\n        id: reportId\n      }\n    });\n\n    if (count === 0) {\n      res.end();\n      return;\n    }\n\n    await prisma.report.update({\n      where: {\n        id: reportId\n      },\n      data: {\n        status: payload.ticketState\n      }\n    });\n    const reports = await prisma.report.findMany({\n      where: {\n        status: 'OPEN'\n      }\n    });\n    res.status(200).json({\n      reports\n    });\n    res.end();\n  } catch (err) {\n    throw new Error(err);\n  }\n\n  ;\n};\n\nexport default handler;","map":null,"metadata":{},"sourceType":"module"}