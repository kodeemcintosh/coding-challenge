{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kodeemcintosh/Repos/coding-challenge/pages/index.tsx\";\nimport { useState } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { Header } from '@components/header';\nimport { Footer } from '@components/footer';\nimport { TicketItem } from '@components/ticket-item';\nexport async function getServerSideProps() {\n  const data = await fetch('http://localhost:3000/api/reports');\n  const {\n    reports\n  } = await data.json();\n  return {\n    props: {\n      reports\n    }\n  };\n}\n\nconst IndexPage = ({\n  reports\n}) => {\n  const {\n    0: tickets,\n    1: setTickets\n  } = useState(reports);\n\n  const handleUpdateTicket = async (id, state) => {\n    const response = await fetch(`http://localhost:3000/api/reports/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origins': '*'\n      },\n      body: JSON.stringify({\n        ticketState: state\n      })\n    });\n    const res = await response.json();\n    setTickets(res);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex mx-20 justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-sm hover:shadow-lg duration-500 px-2 sm:px-6 md:px-2 py-4 my-6 w-4/5\",\n        children: tickets === null || tickets === void 0 ? void 0 : tickets.map(({\n          id,\n          type,\n          status,\n          message\n        }) => {\n          return /*#__PURE__*/_jsxDEV(TicketItem, {\n            id: id,\n            type: type,\n            status: status,\n            message: message,\n            updateTicket: handleUpdateTicket\n          }, `ticket-${id})`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/Users/kodeemcintosh/Repos/coding-challenge/pages/index.tsx"],"names":["useState","fetch","Header","Footer","TicketItem","getServerSideProps","data","reports","json","props","IndexPage","tickets","setTickets","handleUpdateTicket","id","state","response","method","headers","body","JSON","stringify","ticketState","res","map","type","status","message"],"mappings":";;;AACA,SAAaA,QAAb,QAA6B,OAA7B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AAEA,OAAO,eAAeC,kBAAf,GAAqC;AAC1C,QAAMC,IAAI,GAAG,MAAML,KAAK,CAAC,mCAAD,CAAxB;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAc,MAAMD,IAAI,CAACE,IAAL,EAA1B;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLF,MAAAA;AADK;AADF,GAAP;AAKD;;AAMD,MAAMG,SAA6B,GAAG,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAiB;AACrD,QAAM;AAAA,OAAEI,OAAF;AAAA,OAAWC;AAAX,MAA0BZ,QAAQ,CAACO,OAAD,CAAxC;;AAEA,QAAMM,kBAAkB,GAAG,OAAOC,EAAP,EAAmBC,KAAnB,KAAqC;AAC9D,UAAMC,QAAQ,GAAG,MAAMf,KAAK,CAAE,qCAAoCa,EAAG,EAAzC,EAA4C;AACtEG,MAAAA,MAAM,EAAE,KAD8D;AAEtEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,wCAAgC;AAFzB,OAF6D;AAMtEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,WAAW,EAAEP;AADM,OAAf;AANgE,KAA5C,CAA5B;AAUA,UAAMQ,GAAG,GAAG,MAAMP,QAAQ,CAACR,IAAT,EAAlB;AACAI,IAAAA,UAAU,CAACW,GAAD,CAAV;AACD,GAbD;;AAeA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,iGAAf;AAAA,kBACKZ,OADL,aACKA,OADL,uBACKA,OAAO,CAAEa,GAAT,CAAa,CAAC;AAAEV,UAAAA,EAAF;AAAMW,UAAAA,IAAN;AAAYC,UAAAA,MAAZ;AAAoBC,UAAAA;AAApB,SAAD,KAAwC;AACpD,8BACE,QAAC,UAAD;AAEE,YAAA,EAAE,EAAEb,EAFN;AAGE,YAAA,IAAI,EAAEW,IAHR;AAIE,YAAA,MAAM,EAAEC,MAJV;AAKE,YAAA,OAAO,EAAEC,OALX;AAME,YAAA,YAAY,EAAEd;AANhB,aACQ,UAASC,EAAG,GADpB;AAAA;AAAA;AAAA;AAAA,kBADF;AAUD,SAXA;AADL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAkBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA,kBADF;AAsBD,CAxCD;;AA0CA,eAAeJ,SAAf","sourcesContent":["\nimport { FC, useState } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { Header } from '@components/header';\nimport { Footer } from '@components/footer';\nimport { TicketItem } from '@components/ticket-item';\n\nexport async function getServerSideProps () {\n  const data = await fetch('http://localhost:3000/api/reports');\n  const { reports } = await data.json();\n\n  return {\n    props: {\n      reports\n    }\n  }\n}\n\ninterface IndexPageProps {\n  reports: any;\n}\n\nconst IndexPage: FC<IndexPageProps> = ({ reports }) => {\n  const [ tickets, setTickets ] = useState(reports);\n\n  const handleUpdateTicket = async (id: string, state: string) => {\n    const response = await fetch(`http://localhost:3000/api/reports/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origins': '*'\n      },\n      body: JSON.stringify({\n        ticketState: state\n      })\n    });\n    const res = await response.json();\n    setTickets(res);\n  }\n\n  return (\n    <>\n      <Header />\n      <div className=\"flex mx-20 justify-center\">\n        <div className=\"bg-white rounded-lg shadow-sm hover:shadow-lg duration-500 px-2 sm:px-6 md:px-2 py-4 my-6 w-4/5\">\n            {tickets?.map(({ id, type, status, message }: any) => {\n              return(\n                <TicketItem\n                  key={`ticket-${id})`}\n                  id={id}\n                  type={type}\n                  status={status}\n                  message={message}\n                  updateTicket={handleUpdateTicket}\n                />\n              )\n            })}\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}